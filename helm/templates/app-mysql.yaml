apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.mysqlApp.appname }}-data
spec:
  storageClassName: {{ .Values.mysqlApp.storage.className }}
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.mysqlApp.storage.storageRequestSize }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.mysqlApp.appname }}-app
  labels:
    app: {{ .Values.mysqlApp.appname }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.mysqlApp.appname }}
  template:
    metadata:
      labels:
        app: {{ .Values.mysqlApp.appname }}
    spec:
      containers:
        - name: {{ .Values.mysqlApp.appname }}-appserver
          image: {{ .Values.mysqlApp.image.repository }}
          ports:
            - containerPort: {{ .Values.mysqlApp.service.port }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: {{ .Values.mysqlApp.mysqlRootPassword }}
            - name: MYSQL_DATABASE
              value: {{ .Values.mysqlApp.mysqlSonarDB }}
            - name: MYSQL_USER
              value: {{ .Values.mysqlApp.mysqlUser }}
            - name: MYSQL_PASSWORD
              value: {{ .Values.mysqlApp.mysqlPassword }}
          volumeMounts:
            - name: {{ .Values.mysqlApp.appname }}-data
              mountPath: /var/lib/mysql
      volumes:
        - name: {{ .Values.mysqlApp.appname }}-data
          persistentVolumeClaim:
            claimName: {{ .Values.mysqlApp.appname }}-data
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
